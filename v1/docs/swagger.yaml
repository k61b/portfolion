basePath: /api/v1
definitions:
  models.Bookmark:
    properties:
      added_price:
        type: number
      pieces:
        type: number
      symbol:
        type: string
    type: object
  models.Symbol:
    properties:
      price:
        type: number
      symbol:
        type: string
    type: object
  models.User:
    properties:
      bookmarks:
        items:
          $ref: '#/definitions/models.Bookmark'
        type: array
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:6161
info:
  contact: {}
  description: This is a sample server Portfolion server.
  title: Portfolion API
  version: "0.1"
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: Retrieves the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: User authentication
      tags:
      - Auth
  /bookmarks:
    get:
      consumes:
      - application/json
      description: Retrieves all bookmarks for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Bookmark'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all bookmarks
      tags:
      - Bookmarks
    post:
      consumes:
      - application/json
      description: Creates a new bookmark for the authenticated user
      parameters:
      - description: Bookmark object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Bookmark'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Bookmark'
      security:
      - ApiKeyAuth: []
      summary: Create a new Bookmark
      tags:
      - Bookmarks
  /bookmarks/{symbol}:
    delete:
      consumes:
      - application/json
      description: Deletes a bookmark for the authenticated user
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a bookmark
      tags:
      - Bookmarks
    put:
      consumes:
      - application/json
      description: Updates a bookmark for the authenticated user
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      - description: Bookmark object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Bookmark'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Bookmark'
      security:
      - ApiKeyAuth: []
      summary: Update a bookmark
      tags:
      - Bookmarks
  /logout:
    get:
      consumes:
      - application/json
      description: Logs out the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: User logout
      tags:
      - Auth
  /search/{symbol}:
    get:
      consumes:
      - application/json
      description: Search symbol
      parameters:
      - description: Symbol
        in: path
        name: symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Symbol'
      summary: Search symbol
      tags:
      - Symbols
  /session:
    post:
      consumes:
      - application/json
      description: Creates a new user session or retrieves an existing session
      parameters:
      - description: User object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: User session
      tags:
      - Auth
swagger: "2.0"
